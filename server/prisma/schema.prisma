// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            Int             @id @default(autoincrement())
  email         String          @unique
  username      String          @unique
  password      String
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  workspaces    UserWorkspace[]
  createdWorkspaces Workspace[] @relation("WorkspaceCreator")
  messages      WorkspaceMessage[]
  assignedTasks Task[]         @relation("TaskAssignee")
}

model Workspace {
  id          Int             @id @default(autoincrement())
  name        String
  createdAt   DateTime        @default(now())
  updatedAt   DateTime        @updatedAt
  creator     User            @relation("WorkspaceCreator", fields: [creatorId], references: [id])
  creatorId   Int
  members     UserWorkspace[]
  messages    WorkspaceMessage[]
  tasks       Task[]
}

model UserWorkspace {
  id          Int       @id @default(autoincrement())
  user        User      @relation(fields: [userId], references: [id])
  userId      Int
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  role        String    @default("member") // Can be "leader" or "member"
  joinedAt    DateTime  @default(now())

  @@unique([userId, workspaceId])
}

model WorkspaceMessage {
  id          Int       @id @default(autoincrement())
  content     String
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  sender      User      @relation(fields: [senderId], references: [id])
  senderId    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([workspaceId])
  @@index([senderId])
}

model Task {
  id          Int       @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime?
  labels      String[]
  status      String    @default("pending")
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId Int
  assignee    User      @relation("TaskAssignee", fields: [assigneeId], references: [id])
  assigneeId  Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt

  @@index([workspaceId])
  @@index([assigneeId])
}
